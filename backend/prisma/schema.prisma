// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  previewFeatures = ["fullTextSearchPostgres"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}

model User {
  id Int @id @default(autoincrement())
  username String? @unique
  auth_provider String @default("local")
  password String?
  name String?
  email String?
  google_id String? @unique
  access_token String?
  refresh_token String?
  token_expiry DateTime?
  applications Application[]
  categories Category[]
  notes Note[]
  companies Company[]
  emailScanned DateTime?
  calendarId String?
}

model Application {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  companyName String?
  companyId Int?
  company Company? @relation(fields: [companyId], references: [id])
  title String
  description String?
  notes String?
  status String
  categories Category[]
  isFeatured Boolean @default(false)
  appliedAt DateTime @default(now())
  updatedAt DateTime @default(now())
  interviewAt DateTime?
  emailId String?
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  users User[]
  applications Application[]
  createdAt DateTime @default(now())
}

model Company {
  id Int @id @default(autoincrement())
  name String
  applications Application[]
  industry String?
  description String?
  careerPage String?
  userId Int
  user User @relation(fields: [userId], references: [id])
  isFavorite Boolean @default(false)
  favoritedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model Note {
  id Int @id @default(autoincrement())
  task String
  description String?
  userId Int
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}